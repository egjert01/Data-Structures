/*********************************************************
* hw1: Cheshire ConCATenation âˆ’ No Strings Attached
* Comp 15 Spring 2020
* README
* Author: Emily Gjertsson
*
*********************************************************/

PROGRAM PURPOSE: Practice using character arrays to implement our own version
of the c++ vector class, allowing the client to manipulate arrays after runtime
starts.


ACKNOWLEDGEMENTS:
TA'S: Sawyer, Kieran, and Eric
Websites: the course website on copy constructors and assignment operator
overload.
The function contracts were taken from the comp15 assignment spec.
README template by Hayden Wolff.


FILES:
    testCharArrayList.cpp: exclusively a testing file, that has a testing
        function associated with every file in CharArrayList.cpp.

    CharArrayList.cpp: Implementation of the CharArrayList.cpp, which allows
        the user to manipulate and change an array after runtime starts. along
        with an assignment operator, it has three constructors - default, one
        that creates an array with the capacity of one, and another that creates
        an array with a given capacity.

    CharArrayList.h: interface of CharArrayList class


HOW TO COMPILE/LINK/RUN:
    Compile and link with "clang++ -Wall -Wextra -o test CharArrayList.cpp
    testCharArrayList.cpp"
    Run executable with "./test"


DATA STRUCTURES
---------------
The data structure used in this homework are arrays. These arrays are then
implemented to create the vector/linked list/array list data structure.

Allows for the quick addition, removal, and retrieval of elements anywhere in
the array.

Complexity of O(1) - constant time which is very efficient time-wise, but
might result in wasted memory because of the expand() function doubling capacity


TESTING
-------
To test my program I created a testing file in which I created a function
correlated with every function I have in the CharArrayList.cpp file to
check functionality. I tested each one at a time to make debugging simple.
Using cout statements allowed me to check for unexpected output.
It also allowed to me ensure that my errors were working as expected.

Within my testing file, I created three objects, one for every type of
constructor, and tested all of the functions on each of them.


ADDITIONAL INFORMATION
----------------------
There are some error messages that I use in my program which do not
necessarily make sense. For example, for the range_error messages, if the
user were to try to use the elementAt() function, the empty array does not have
any indices, but the error message says that "index (0) not in range [0, 0)"
which is inaccurate.
